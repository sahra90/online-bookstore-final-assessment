name: Python CI/CD Pipeline

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8

    - name: Set up environment variables
      run: |
        echo "FLASK_APP=app.py" >> $GITHUB_ENV
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 app.py models.py test/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check for style issues (warnings only)
        flake8 app.py models.py test/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Validate Flask application
      run: |
        python -c "from app import app; print('Flask app loaded successfully')"

    - name: Verify test discovery
      run: |
        echo "Verifying test discovery..."
        python -m pytest --collect-only -q
        echo "âœ… Test discovery successful"

    - name: Run tests with coverage
      run: |
        python -m pytest -v --maxfail=1 --disable-warnings --cov=. --cov-report=term-missing --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Test Results Summary
      if: always()
      run: |
        echo "ðŸŽ‰ CI/CD Pipeline Summary:"
        echo "âœ… Code linting completed"
        echo "âœ… Flask application validated"
        echo "âœ… Tests executed with coverage"
        echo "ðŸ“Š Check the Actions tab for detailed results"
