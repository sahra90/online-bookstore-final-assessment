name: Python CI

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8

    - name: Set up environment variables
      run: |
        echo "FLASK_APP=app.py" >> $GITHUB_ENV
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 app.py models.py test/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 app.py models.py test/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Validate Flask application
      run: |
        python -c "from app import app; print('Flask app loaded successfully')"

    - name: Debug environment and test discovery
      run: |
        echo "Current directory contents:"
        ls -la
        echo "Test directory contents:"
        ls -la test/
        echo "Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
        echo "Test discovery check:"
        python -m pytest --collect-only

    - name: Run tests with coverage
      run: |
        python -m pytest --maxfail=1 --disable-warnings --cov=. --cov-report=term-missing
